

type Mutation{
	addApartment(
		login: Credentials!
		input: ApartmentInfo!
	): String
	firstRegister(
		login: Credentials!
		input: CompanyInfo
	): String
}

type Query{
	ListAll(
		login: Credentials!
	): [ApartmentBasicInfo!]
	getInfoById(
		login: Credentials!
		estate_id: String!
	): ApartmentFullInfo
}

input Credentials{
	email: String!
	password: String!
}

input CompanyInfo{
	name: String
	companyName: String
	address: String
	city: String
	zip: String
	country_id: Int
	bankAccount: String
}

input ApartmentInfo{
	address: String!
	city: String!
	zip: String
	intercomCode: String
	apartment_id: String
	rental_type: Rodzaj_najmu
	zarzadzanie: Zarzadzanie
	ifOtherBankAccount: String
	notes: [String!]
	tags: [String!]
	rodzaj_ogrzewania: Rodzaj_ogrzewania
	internetProvider: String
}

type ApartmentBasicInfo{
	address: String
	estate_code: String
	estate_is_under_renovation: Int
	estate_manage_type: Int
	estate_id: Int
	tags: String
	estate_details: Estate_details
	estate_rental_type: Int
	estate_access_code: String
	rooms_accommodation: [String!]
	free_rooms_count: Int
	row_class: String
}

type Estate_details{
	liczba_pokoi: Int
	pietro: Int
	powierzchnia: Float
}

type ApartmentFullInfo{
	basicInfo: String
	apartment_card: ApartmentCard
	notes: String
	rooms_and_tenants: String
	meters_and_charges: String
	notifications: String
	estate_controls: String
	billings: String
	insurance: String
	dokuments: String
	cost_documents: String
}

type ApartmentCard{
	ogolne: String
	szczegoly: String
	daneDostawcow: String
}

enum Rodzaj_ogrzewania{
	Gaz
	Miejskie
	Prand
	Wlasna_kotlowina
}

enum Rodzaj_najmu{
	Na_pokoje
	Wynajem_calosci
}

enum Zarzadzanie{
	Wlasnosc
	Zarzadzanie
	Podnajem
}
schema{
	query: Query,
	mutation: Mutation
}